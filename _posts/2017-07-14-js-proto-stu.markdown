---
layout: post
title: Js原型对象
img: nevada.jpg # Add image post (optional)
date: 2017-07-11 12:50:00 +0300
description:Js原型对象学习，联系java面向对象，两者虽然五关，但编程思想的区别需要注意  # Add post description (optional)
tag: [JavaScript,prototype]
---

学习js原型对象时总想跟java类进行比较，可能因为当初java给人最大的印象就是面向对象编程了。当然其实这俩语言是真的没关系，不过你非要说所有编程语言都有着那一丝丝的联系我也没招。
java因为类的存在，是基于模板的面向对象，类肯定是不能当方法来运行的，调用其内部静态方法或继承父类方法。

而js是基于原型对象的语言，甚至不能讲“面向对象”这种概念，它可以扮演两种角色：
1->将原型对象本身作为方法来使用，那么万物皆对象=》万物皆方法体;
2->模仿面向对象的特性，为原型对象定义属性，然后通过运用构造器，将构造器构造出的对象的指针通过原型链指向原型对象的属性。
来看一下下面的代码：
    
    function fun(){
              //添加两个属性

        this.pro1="value1";
        this.pro2="value2";
        
        //部分可自动执行的代码
        alert("原型对象中的代码！");
        }
        //原型对象当做方法来用
        fun();
        /*方法体构造时内部代码执行了
        一遍，并且构造出的实例对象通过
        原型链的生成可以访问原型对象的属性*/
        alert(new fun().pro1);
        //
这种允许混杂的现象在java类中是绝对不允许的，而这也能体现js是基于原型对象，而不能称为绝对规范的完全面向对象。js通过借用面向对象的思想设计出这种编程语言，其灵活性有目共睹，这种弱类型的语言也是我所喜欢的。
       
